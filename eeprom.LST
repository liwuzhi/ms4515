C51 COMPILER V9.01   EEPROM                                                                05/17/2015 22:53:50 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN eeprom.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE eeprom.c COMPACT OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1                  
   2          #include <reg52.h>
   3          #include "eeprom.h"
   4          #include "intrins.h"
   5          
   6          ///*----------------------------
   7          //Software delay function
   8          //----------------------------*/
   9          //void Delay(unsigned char n)
  10          //{
  11          //    unsigned int x;
  12          //
  13          //    while (n--)
  14          //    {
  15          //        x = 0;
  16          //        while (++x);
  17          //    }
  18          //}
  19          
  20          /*----------------------------
  21          Disable ISP/IAP/EEPROM function
  22          Make MCU in a safe state
  23          ----------------------------*/
  24          void IapIdle()
  25          {
  26   1          IAP_CONTR = 0;                  //Close IAP function
  27   1          IAP_CMD = 0;                    //Clear command to standby
  28   1          IAP_TRIG = 0;                   //Clear trigger register
  29   1          IAP_ADDRH = 0x80;               //Data ptr point to non-EEPROM area
  30   1          IAP_ADDRL = 0;                  //Clear IAP address to prevent misuse
  31   1      }
  32          
  33          /*----------------------------
  34          Read one byte from ISP/IAP/EEPROM area
  35          Input: addr (ISP/IAP/EEPROM address)
  36          Output:Flash data
  37          ----------------------------*/
  38          unsigned char IapReadByte(unsigned int addr)
  39          {
  40   1          unsigned char dat;                       //Data buffer
  41   1      
  42   1          IAP_CONTR = ENABLE_IAP;         //Open IAP function, and set wait time
  43   1          IAP_CMD = CMD_READ;             //Set ISP/IAP/EEPROM READ command
  44   1          IAP_ADDRL = addr;               //Set ISP/IAP/EEPROM address low
  45   1          IAP_ADDRH = addr >> 8;          //Set ISP/IAP/EEPROM address high
  46   1          IAP_TRIG = 0x46;                //Send trigger command1 (0x46)
  47   1          IAP_TRIG = 0xb9;                //Send trigger command2 (0xb9)
  48   1          _nop_();                        //MCU will hold here until ISP/IAP/EEPROM operation complete
  49   1          dat = IAP_DATA;                 //Read ISP/IAP/EEPROM data
  50   1          IapIdle();                      //Close ISP/IAP/EEPROM function
  51   1      
  52   1          return dat;                     //Return Flash data
  53   1      }
  54          
  55          /*----------------------------
C51 COMPILER V9.01   EEPROM                                                                05/17/2015 22:53:50 PAGE 2   

  56          Program one byte to ISP/IAP/EEPROM ar
  57          Input: addr (ISP/IAP/EEPROM address)
  58                 dat (ISP/IAP/EEPROM data)
  59          Output:-
  60          ----------------------------*/
  61          void IapProgramByte( unsigned char dat,unsigned int addr)
  62          {
  63   1          IAP_CONTR = ENABLE_IAP;         //Open IAP function, and set wait time
  64   1          IAP_CMD = CMD_PROGRAM;          //Set ISP/IAP/EEPROM PROGRAM command
  65   1          IAP_ADDRL = addr;               //Set ISP/IAP/EEPROM address low
  66   1          IAP_ADDRH = addr >> 8;          //Set ISP/IAP/EEPROM address high
  67   1          IAP_DATA = dat;                 //Write ISP/IAP/EEPROM data
  68   1          IAP_TRIG = 0x46;                //Send trigger command1 (0x46)
  69   1          IAP_TRIG = 0xb9;                //Send trigger command2 (0xb9)
  70   1          _nop_();                        //MCU will hold here until ISP/IAP/EEPROM operation complete
  71   1          IapIdle();
  72   1      }
  73          
  74          /*----------------------------
  75          Erase one sector area
  76          Input: addr (ISP/IAP/EEPROM address)
  77          Output:-
  78          ----------------------------*/
  79          void IapEraseSector(unsigned int addr)
  80          {
  81   1          IAP_CONTR = ENABLE_IAP;         //Open IAP function, and set wait time
  82   1          IAP_CMD = CMD_ERASE;            //Set ISP/IAP/EEPROM ERASE command
  83   1          IAP_ADDRL = addr;               //Set ISP/IAP/EEPROM address low
  84   1          IAP_ADDRH = addr >> 8;          //Set ISP/IAP/EEPROM address high
  85   1          IAP_TRIG = 0x46;                //Send trigger command1 (0x46)
  86   1          IAP_TRIG = 0xb9;                //Send trigger command2 (0xb9)
  87   1          _nop_();                        //MCU will hold here until ISP/IAP/EEPROM operation complete
  88   1          IapIdle();
  89   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     78    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
