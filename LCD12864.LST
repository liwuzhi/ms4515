C51 COMPILER V9.01   LCD12864                                                              05/16/2015 23:36:18 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN LCD12864.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE LCD12864.c COMPACT OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          
   2          #include "lcd12864.h"
   3          #include "ziku.h"
   4          
   5          
   6          void Delay_1ms(uint x)
   7          {
   8   1              unsigned char j;
   9   1              while(x--)
  10   1              {
  11   2                      for(j=0;j<125;j++)
  12   2                      {;}
  13   2              }
  14   1      }
  15          
  16          void Lcm_Delay(void)//液晶延时，防止单片机时钟过快，乱显
  17          {
  18   1         char i;
  19   1         for(i=0;i<3;i++)
  20   1         {    
  21   2              _nop_();
  22   2              _nop_();
  23   2              _nop_();
  24   2              _nop_();
  25   2              _nop_();
  26   2              _nop_();
  27   2              _nop_();
  28   2              _nop_();
  29   2              }
  30   1                      
  31   1      
  32   1      }
  33          void Wr_Data_L(uchar wrdata) //左半屏写数据
  34          {
  35   1              CS1=1;
  36   1              CS2=0;
  37   1              RS=1;
  38   1              RW=0;   
  39   1              LCMdata=wrdata;
  40   1              E=1;
  41   1              Lcm_Delay();//必须加延时，30M以上晶振须再加长延时
  42   1              E=0; 
  43   1              CS1=0;
  44   1              CS2=0;
  45   1      }
  46          
  47          
  48          void Wr_Data_R(uchar wrdata) //右半屏写数据
  49          {
  50   1              CS1=0;
  51   1              CS2=1;
  52   1              RS=1;
  53   1              RW=0;
  54   1              LCMdata=wrdata;
  55   1              E=1;    
C51 COMPILER V9.01   LCD12864                                                              05/16/2015 23:36:18 PAGE 2   

  56   1              Lcm_Delay();//必须加延时，30M以上晶振须再加长延时
  57   1              E=0; 
  58   1              CS1=0;
  59   1              CS2=0;
  60   1      }
  61          
  62          
  63          void Wr_Command_L(uchar wrcommand) //左半屏写指令
  64          {
  65   1              Lcm_Delay();
  66   1              CS1=1;
  67   1              CS2=0;
  68   1              RS=0;
  69   1              RW=0;
  70   1              LCMdata=wrcommand;
  71   1              E=1;    
  72   1              Lcm_Delay();//必须加延时，30M以上晶振须再加长延时
  73   1              E=0;
  74   1              CS1=0;
  75   1              CS2=0;
  76   1      }
  77          
  78          
  79          void Wr_Command_R(uchar wrcommand) //右半屏写指令
  80          {
  81   1              Lcm_Delay();
  82   1              CS1=0;
  83   1              CS2=1;
  84   1              RS=0;
  85   1              RW=0;   
  86   1              LCMdata=wrcommand;
  87   1              E=1;    
  88   1              Lcm_Delay();//必须加延时，30M以上晶振须再加长延时
  89   1              E=0;
  90   1              CS1=0;
  91   1              CS2=0;
  92   1      }
  93          
  94          /**********************************************************
  95          pos_x是显示位置X坐标0~127
  96          pos_y是显示所在行0~7
  97          length是长度
  98          width是宽度,调用图片宽度必须是8的倍数
  99          graphic图片指针
 100          reverse=0时正显,reverse=1时负显
 101          ***********************************************************/
 102          void Display_Graphic(uchar pos_x,uchar pos_y,uchar length,uchar width,uchar *graphic,bit reverse)
 103          {
 104   1              uchar page,address,disp_data,i;
 105   1              if(((pos_y*8+width)>64)||((pos_x+length)>128)||(width%8))
 106   1                      return; //超出显示范围，跳出
 107   1      
 108   1              page=X_ADDRESS+pos_y;                   
 109   1              address=pos_x;
 110   1              for(i=0;i<(width/8);i++)
 111   1              {
 112   2                      for(;(address-pos_x)<length;address++)
 113   2                      {
 114   3                              if(reverse)
 115   3                                      disp_data=~(*graphic++);
 116   3                              else
 117   3                                      disp_data=*graphic++;           
C51 COMPILER V9.01   LCD12864                                                              05/16/2015 23:36:18 PAGE 3   

 118   3                              if(address<64)
 119   3                              {
 120   4                                      Wr_Command_L(START_LINE);               
 121   4                                      Wr_Command_L(page);     
 122   4                                      Wr_Command_L(address+Y_ADDRESS);                                        
 123   4                                      Wr_Data_L(disp_data);                   
 124   4                              }
 125   3                              else
 126   3                              {
 127   4                                      Wr_Command_R(START_LINE);                       
 128   4                                      Wr_Command_R(page);             
 129   4                                      Wr_Command_R(address); //address+Y_ADDRESS-64   
 130   4                                      Wr_Data_R(disp_data); 
 131   4                              }
 132   3                      }
 133   2                      address=pos_x;
 134   2                      page++;
 135   2              }                       
 136   1      }
 137          
 138          /**********************************************************
 139          pos_x是显示位置X坐标0~127
 140          pos_y是显示所在行0~7
 141          length是长度
 142          width是宽度,调用图片宽度必须是8的倍数
 143          graphic图片指针
 144          reverse=0时清屏,reverse=1时全显
 145          ***********************************************************/
 146          void Clean_Display(uchar pos_x,uchar pos_y,uchar length,uchar width,bit reverse)
 147          {
 148   1              uchar page,address,disp_data,i;
 149   1              if(((pos_y*8+width)>64)||((pos_x+length)>128)||(width%8))
 150   1                      return; //超出显示范围，跳出
 151   1      
 152   1              page=X_ADDRESS+pos_y;                   
 153   1              address=pos_x;
 154   1              for(i=0;i<(width/8);i++)
 155   1              {
 156   2                      for(;(address-pos_x)<length;address++)
 157   2                      {
 158   3                              if(reverse)
 159   3                                      disp_data=0xff;
 160   3                              else
 161   3                                      disp_data=0x00;         
 162   3                              if(address<64)
 163   3                              {
 164   4                                      Wr_Command_L(START_LINE);               
 165   4                                      Wr_Command_L(page);     
 166   4                                      Wr_Command_L(address+Y_ADDRESS);                                        
 167   4                                      Wr_Data_L(disp_data);                   
 168   4                              }
 169   3                              else
 170   3                              {
 171   4                                      Wr_Command_R(START_LINE);                       
 172   4                                      Wr_Command_R(page);             
 173   4                                      Wr_Command_R(address); //address+Y_ADDRESS-64   
 174   4                                      Wr_Data_R(disp_data); 
 175   4                              }
 176   3                      }
 177   2                      address=pos_x;
 178   2                      page++;
 179   2              }                       
C51 COMPILER V9.01   LCD12864                                                              05/16/2015 23:36:18 PAGE 4   

 180   1      }
 181          
 182          
 183          
 184          
 185          void Display_Onechar(uchar pos_x,uchar pos_y,uchar Onechar,bit reverse)//显示一个字符
 186          {
 187   1              uchar page,address,disp_data,i,k;
 188   1              if(((pos_y*8+16)>64)||((pos_x+8)>128))
 189   1                      return; //超出显示范围，跳出
 190   1      
 191   1              page=X_ADDRESS+pos_y;                   
 192   1              address=pos_x;
 193   1      
 194   1              for(i=0;i<2;i++)
 195   1              {
 196   2                      k=0;            
 197   2                      for(;(address-pos_x)<8;address++)
 198   2                      {
 199   3                              if(reverse)
 200   3                                      disp_data=~(nAsciiDot[(Onechar-0x20)*16+i*8+k]);
 201   3                              else
 202   3                                      disp_data=nAsciiDot[(Onechar-0x20)*16+i*8+k];
 203   3                              if(address<64)
 204   3                              {
 205   4                                      Wr_Command_L(START_LINE);               
 206   4                                      Wr_Command_L(page); 
 207   4                                      Wr_Command_L(address+Y_ADDRESS);                                        
 208   4                                      Wr_Data_L(disp_data);                   
 209   4                              }
 210   3                              else
 211   3                              {
 212   4                                      Wr_Command_R(START_LINE);                       
 213   4                                      Wr_Command_R(page);     
 214   4                                      Wr_Command_R(address); 
 215   4                                      Wr_Data_R(disp_data); 
 216   4                              }
 217   3                              k++;
 218   3                      }
 219   2                      address=pos_x;
 220   2                      page++;
 221   2              }       
 222   1      }
 223          
 224          
 225          
 226          
 227          
 228          void Lcm_Init(void)  //液晶初始化
 229          {
 230   1              Delay_1ms(100);
 231   1              
 232   1              RST=0;
 233   1              Lcm_Delay();
 234   1              RST=1;
 235   1              
 236   1              Wr_Command_L(DISPLAY_OFF);  
 237   1              Wr_Command_R(DISPLAY_OFF);  //关显示
 238   1      
 239   1              Wr_Command_L(START_LINE); 
 240   1              Wr_Command_R(START_LINE);  //显示起始行
 241   1      
C51 COMPILER V9.01   LCD12864                                                              05/16/2015 23:36:18 PAGE 5   

 242   1              Wr_Command_L(X_ADDRESS); 
 243   1              Wr_Command_R(X_ADDRESS);        //设置页地址
 244   1      
 245   1              Wr_Command_L(Y_ADDRESS); 
 246   1              Wr_Command_R(Y_ADDRESS);        //设置列地址
 247   1      
 248   1              Wr_Command_L(DISPLAY_ON); 
 249   1              Wr_Command_R(DISPLAY_ON);  //开显示
 250   1      
 251   1              Clean_Display(0,0,128,64,0);
 252   1      }
 253          
 254          
 255          
 256          
 257          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    716    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----      17
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       3
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
