C51 COMPILER V9.01   STORAGE                                                               05/20/2015 23:55:47 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE STORAGE
OBJECT MODULE PLACED IN storage.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE storage.c LARGE ROM(COMPACT) OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #include "eeprom.h"
   3          #include "global_var.h"
   4          
   5          #define SECRIT     0x6800
   6          #define START      0x6801
   7          
   8          #define ZERO_ADD_1 0x6fF0
   9          #define ZERO_ADD_2 0x6fF1
  10          
  11          #define K2_ADD_1    0x6fF2
  12          #define K2_ADD_2    0x6fF3
  13          
  14          #define K1_ADD_1    0x6fFB
  15          #define K1_ADD_2    0x6fFC
  16          
  17          #define INTEGRAL   0x6ff4
  18          
  19          #define AREA_1     0x6ff9
  20          #define AREA_2     0x6ffa
  21          
  22          #define UNIT       0x6ff7
  23          
  24          #define RANGE      0x6ff8
  25          
  26          #define RANGEMIN1  0x6ff5
  27          #define RANGEMIN2  0x6ff6
  28          
  29          #define SECRIT_NUM 0x6fff
  30          
  31          #define ISCH4      0x6fef
  32          
  33          #define MAXOUT     0x6fea
  34          
  35          #define SUM1       0x6fee
  36          #define SUM2       0x6fed
  37          #define SUM3       0x6fec
  38          #define SUM4       0x6feb
  39          
  40          #define SUM1_BIAO_1       0x6fe5
  41          #define SUM1_BIAO_2       0x6fe6
  42          #define SUM1_BIAO_3       0x6fe7
  43          #define SUM1_BIAO_4       0x6fe8
  44          
  45          #define SUM1_BIAO_CUN_1       0x6fd1
  46          #define SUM1_BIAO_CUN_2       0x6fd2
  47          #define SUM1_BIAO_CUN_3       0x6fd3
  48          #define SUM1_BIAO_CUN_4       0x6fd4
  49          
  50          #define ZERO_ADD_REV_1 0x6fe1
  51          #define ZERO_ADD_REV_2 0x6fe2
  52          
  53          
  54          #define START1     0x6af0
  55          #define START2     0x6af1
C51 COMPILER V9.01   STORAGE                                                               05/20/2015 23:55:47 PAGE 2   

  56          
  57          /**********二级eeprom保护数据******************/
  58          #define ZERO_ADD_1_2 0x64F0
  59          #define ZERO_ADD_2_2 0x64F1
  60          
  61          #define K2_ADD_1_2    0x64F2
  62          #define K2_ADD_2_2    0x64F3
  63          
  64          #define K1_ADD_1_2    0x64FB
  65          #define K1_ADD_2_2    0x64FC
  66          
  67          #define INTEGRAL_2   0x64f4
  68          
  69          #define AREA_1_2     0x64f9
  70          #define AREA_2_2     0x64fa
  71          
  72          #define UNIT_2       0x64f7
  73          
  74          #define RANGE_2      0x64f8
  75          
  76          #define RANGEMIN1_2  0x64f5
  77          #define RANGEMIN2_2  0x64f6
  78          
  79          #define SECRIT_NUM_2 0x64ff
  80          
  81          #define ISCH4_2      0x64ef
  82          
  83          #define MAXOUT_2     0x64ea
  84          
  85          #define SUM1_2       0x64ee
  86          #define SUM2_2       0x64ed
  87          #define SUM3_2       0x64ec
  88          #define SUM4_2       0x64eb
  89          
  90          #define SUM2_BIAO_1       0x64e6
  91          #define SUM2_BIAO_2       0x64e7
  92          #define SUM2_BIAO_3       0x64e8
  93          #define SUM2_BIAO_4       0x64e9
  94          
  95          
  96          #define SUM2_BIAO_CUN_1       0x64e5
  97          #define SUM2_BIAO_CUN_2       0x64e4
  98          #define SUM2_BIAO_CUN_3       0x64e3
  99          #define SUM2_BIAO_CUN_4       0x64e0  
 100           
 101          #define ZERO_ADD_REV_1_2 0x64e1
 102          #define ZERO_ADD_REV_2_2 0x64e2
 103          
 104          
 105          void dat_Init()
 106          {
 107   1      
 108   1         //char temp1,temp2,temp3,temp4;
 109   1         char temp1,temp2;
 110   1         char *p;
 111   1         temp1 = IapReadByte(START1);
 112   1         temp2 = IapReadByte(START2);
 113   1         if(temp1 ==10 && temp2 == 10)
 114   1         {
 115   2              /*面积参数初始化*/
 116   2                      temp1 =IapReadByte(AREA_1);
 117   2                      temp2 =IapReadByte(AREA_2);
C51 COMPILER V9.01   STORAGE                                                               05/20/2015 23:55:47 PAGE 3   

 118   2              g_iArea = temp1*100+temp2;
 119   2      
 120   2                      /*积分系数初始化话*/
 121   2              g_cIntegral = IapReadByte(INTEGRAL);
 122   2      
 123   2                      /*零点值出事化*/
 124   2              temp1 = IapReadByte(ZERO_ADD_1);
 125   2                      temp2 = IapReadByte(ZERO_ADD_2);
 126   2                      g_fZero = (temp1*100+temp2)/100;
 127   2      
 128   2                      /*零点在回复时用的值*/
 129   2                      temp1 = IapReadByte(ZERO_ADD_REV_1);
 130   2                      temp2 = IapReadByte(ZERO_ADD_REV_2);
 131   2                      g_fZero_rev = (temp1*100+temp2)/100;
 132   2      
 133   2                      /*比例值初始化*/
 134   2              temp1 = IapReadByte(K1_ADD_1);
 135   2                      temp2 = IapReadByte(K1_ADD_2);
 136   2                      g_fK1 = (temp1*100+temp2)/1000;
 137   2      
 138   2                      /*补偿系数初始化*/
 139   2              temp1 = IapReadByte(K2_ADD_1);
 140   2                      temp2 = IapReadByte(K2_ADD_2);
 141   2                      g_fK2 = (temp1*100+temp2)/100;
 142   2      
 143   2                  /*单位初始化*/
 144   2                      g_cUint =  IapReadByte(UNIT);
 145   2      
 146   2                      /*量程初始化 秒为单位*/
 147   2                      g_iRange = IapReadByte(RANGE);
 148   2                  
 149   2                      /*量程初始化 分钟为单位*/
 150   2                       temp1 = IapReadByte(RANGEMIN1);
 151   2                       temp2 = IapReadByte(RANGEMIN2);
 152   2                       g_iRangeMin = temp1*100+temp2;
 153   2      
 154   2                       g_cSecrit = IapReadByte(SECRIT);
 155   2      
 156   2                       g_cWorkChange  = IapReadByte(ISCH4);
 157   2      
 158   2                       g_cMaxOut = IapReadByte(MAXOUT);
 159   2      
 160   2                       g_cStart =  IapReadByte(START);
 161   2      
 162   2                        p = (char *)&g_fSum;
 163   2                       *p = IapReadByte(SUM1);
 164   2                       *(p+1) = IapReadByte(SUM2);
 165   2                       *(p+2) = IapReadByte(SUM3);
 166   2                       *(p+3) = IapReadByte(SUM4);
 167   2              /*       temp1 = IapReadByte(SUM1);
 168   2                       temp2 = IapReadByte(SUM2);
 169   2                       temp3 = IapReadByte(SUM3);
 170   2                       temp4 = IapReadByte(SUM4);
 171   2                       g_fSum = temp1+temp2*100.0+temp3*10000.0+temp4*1000000.0;*/
 172   2      
 173   2               p = (char *)&g_fSum_biao;
 174   2                       *p = IapReadByte(SUM1_BIAO_1);
 175   2                       *(p+1) = IapReadByte(SUM1_BIAO_2);
 176   2                       *(p+2) = IapReadByte(SUM1_BIAO_3);
 177   2                       *(p+3) = IapReadByte(SUM1_BIAO_4);
 178   2                       /*
 179   2                       temp1 = IapReadByte(SUM1_BIAO_1);
C51 COMPILER V9.01   STORAGE                                                               05/20/2015 23:55:47 PAGE 4   

 180   2                       temp2 = IapReadByte(SUM1_BIAO_2);
 181   2                       temp3 = IapReadByte(SUM1_BIAO_3);
 182   2                       temp4 = IapReadByte(SUM1_BIAO_4);
 183   2                       g_fSum_biao = temp1+temp2*100.0+temp3*10000.0+temp4*1000000.0; */
 184   2      
 185   2                       p = (char *)&g_fSum_biao_ch4;
 186   2                       *p = IapReadByte(SUM1_BIAO_CUN_1);
 187   2                       *(p+1) = IapReadByte(SUM1_BIAO_CUN_2);
 188   2                       *(p+2) = IapReadByte(SUM1_BIAO_CUN_3);
 189   2                       *(p+3) = IapReadByte(SUM1_BIAO_CUN_4);
 190   2                       /*
 191   2                       temp1 = IapReadByte(SUM1_BIAO_CUN_1);
 192   2                       temp2 = IapReadByte(SUM1_BIAO_CUN_2);
 193   2                       temp3 = IapReadByte(SUM1_BIAO_CUN_3);
 194   2                       temp4 = IapReadByte(SUM1_BIAO_CUN_4);
 195   2                       g_fSum_biao_ch4 = temp1+temp2*100.0+temp3*10000.0+temp4*1000000.0;     */
 196   2         }
 197   1         else
 198   1         {
 199   2      
 200   2           g_iArea = 10000; //1.0平方米
 201   2               g_cIntegral = 0; //0
 202   2               g_fZero = 0.0;
 203   2               g_fZero_rev = 9.0;
 204   2               g_fK1 = 1.0;
 205   2               g_fK2 = 1.0;
 206   2               g_cUint = 1;
 207   2               g_iRange = 1;
 208   2               g_iRangeMin = 100;
 209   2               g_cSecrit = 0;
 210   2               g_cStart = 0;
 211   2               g_cSecrit_Num = 0;
 212   2               g_cWorkChange = 0;
 213   2               g_fSum = 0;
 214   2               g_fSum_biao = 0;
 215   2               g_fSum_biao_ch4 = 0;
 216   2               g_cMaxOut = 0;
 217   2               EA = 0;
 218   2               IapEraseSector(ZERO_ADD_1);
 219   2               IapEraseSector(START);
 220   2           IapEraseSector(START);
 221   2               IapProgramByte(0,SECRIT);
 222   2           IapProgramByte(0,START);
 223   2      
 224   2               IapProgramByte(0,ZERO_ADD_1);
 225   2               IapProgramByte(0,ZERO_ADD_2);
 226   2      
 227   2               IapProgramByte(9,ZERO_ADD_REV_1);
 228   2               IapProgramByte(0,ZERO_ADD_REV_2);
 229   2      
 230   2               IapProgramByte(10,K1_ADD_1);
 231   2               IapProgramByte(0,K1_ADD_2);
 232   2      
 233   2               IapProgramByte(1,K2_ADD_1);
 234   2               IapProgramByte(0,K2_ADD_2);
 235   2      
 236   2               IapProgramByte(g_cIntegral,INTEGRAL);   //IapProgramByte(0,INTEGRAL);
 237   2      
 238   2      
 239   2               IapProgramByte(100,AREA_1); //1.0平方米
 240   2               IapProgramByte(0,AREA_2);
 241   2      
C51 COMPILER V9.01   STORAGE                                                               05/20/2015 23:55:47 PAGE 5   

 242   2      
 243   2               IapProgramByte(g_iRange,RANGE);
 244   2      
 245   2                IapProgramByte(1,RANGEMIN1);
 246   2                IapProgramByte(0,RANGEMIN2);
 247   2      
 248   2      
 249   2               IapProgramByte(0,UNIT);
 250   2       
 251   2           IapProgramByte(0,ISCH4);
 252   2      
 253   2               IapProgramByte(0,MAXOUT);
 254   2      
 255   2               p = (char *)&g_fSum;
 256   2           IapProgramByte(*p,SUM1);
 257   2               IapProgramByte(*(p+1),SUM2);
 258   2               IapProgramByte(*(p+2),SUM3);
 259   2               IapProgramByte(*(p+3),SUM4);
 260   2      
 261   2                p = (char *)&g_fSum_biao;
 262   2           IapProgramByte(*p,SUM1_BIAO_1);
 263   2               IapProgramByte(*(p+1),SUM1_BIAO_2);
 264   2               IapProgramByte(*(p+2),SUM1_BIAO_3);
 265   2               IapProgramByte(*(p+3),SUM1_BIAO_4);
 266   2           
 267   2               p = (char *)&g_fSum_biao_ch4;
 268   2               IapProgramByte(*p,SUM1_BIAO_CUN_1);
 269   2               IapProgramByte(*(p+1),SUM1_BIAO_CUN_2);
 270   2               IapProgramByte(*(p+2),SUM1_BIAO_CUN_3);
 271   2               IapProgramByte(*(p+3),SUM1_BIAO_CUN_4);
 272   2      
 273   2               IapEraseSector(START1);
 274   2               IapEraseSector(START2);
 275   2               IapProgramByte(10,START1);
 276   2               IapProgramByte(10,START2);
 277   2         }
 278   1         
 279   1          if(g_iArea==0xffff && g_cIntegral==0xff && g_cUint==0xff && g_iRange==0xffff && g_iRangeMin==0xffff &&
             - g_cSecrit==0xff )
 280   1                {
 281   2                   /*面积参数初始化*/
 282   2                      temp1 =IapReadByte(AREA_1_2);
 283   2                      temp2 =IapReadByte(AREA_2_2);
 284   2              g_iArea = temp1*100+temp2;
 285   2      
 286   2                      /*积分系数初始化话*/
 287   2              g_cIntegral = IapReadByte(INTEGRAL_2);
 288   2      
 289   2                      /*零点值出事化*/
 290   2              temp1 = IapReadByte(ZERO_ADD_1_2);
 291   2                      temp2 = IapReadByte(ZERO_ADD_2_2);
 292   2                      g_fZero = (temp1*100+temp2)/100;
 293   2      
 294   2                      /*零点在回复时用的值*/
 295   2                      temp1 = IapReadByte(ZERO_ADD_REV_1_2);
 296   2                      temp2 = IapReadByte(ZERO_ADD_REV_2_2);
 297   2                      g_fZero_rev = (temp1*100+temp2)/100;
 298   2      
 299   2                      /*比例值初始化*/
 300   2              temp1 = IapReadByte(K1_ADD_1_2);
 301   2                      temp2 = IapReadByte(K1_ADD_2_2);
 302   2                      g_fK1 = (temp1*100+temp2)/1000;
C51 COMPILER V9.01   STORAGE                                                               05/20/2015 23:55:47 PAGE 6   

 303   2      
 304   2                      /*补偿系数初始化*/
 305   2              temp1 = IapReadByte(K2_ADD_1_2);
 306   2                      temp2 = IapReadByte(K2_ADD_2_2);
 307   2                      g_fK2 = (temp1*100+temp2)/100;
 308   2      
 309   2                  /*单位初始化*/
 310   2                      g_cUint =  IapReadByte(UNIT_2);
 311   2      
 312   2                      /*量程初始化 秒为单位*/
 313   2                      g_iRange = IapReadByte(RANGE_2);
 314   2                  
 315   2                      /*量程初始化 分钟为单位*/
 316   2                       temp1 = IapReadByte(RANGEMIN1_2);
 317   2                       temp2 = IapReadByte(RANGEMIN2_2);
 318   2                       g_iRangeMin = temp1*100+temp2;
 319   2      
 320   2      //               g_cSecrit = IapReadByte(SECRIT_2);
 321   2      
 322   2                       g_cWorkChange  = IapReadByte(ISCH4_2);
 323   2      
 324   2                       g_cMaxOut = IapReadByte(MAXOUT_2);
 325   2      
 326   2      //               g_cStart =  IapReadByte(START_2);
 327   2                       p = (char *)&g_fSum;
 328   2                       *p = IapReadByte(SUM1_2);
 329   2                       *(p+1) = IapReadByte(SUM2_2);
 330   2                       *(p+2) = IapReadByte(SUM3_2);
 331   2                       *(p+3) = IapReadByte(SUM4_2);
 332   2                       
 333   2      //               temp1 = IapReadByte(SUM1_2);
 334   2      //               temp2 = IapReadByte(SUM2_2);
 335   2      //               temp3 = IapReadByte(SUM3_2);
 336   2      //               temp4 = IapReadByte(SUM4_2);
 337   2      //               g_fSum = temp1+temp2*100.0+temp3*10000.0+temp4*1000000.0; 
 338   2      
 339   2                       p = (char *)&g_fSum_biao;
 340   2                       *p = IapReadByte(SUM2_BIAO_1);
 341   2                       *(p+1) = IapReadByte(SUM2_BIAO_2);
 342   2                       *(p+2) = IapReadByte(SUM2_BIAO_3);
 343   2                       *(p+3) = IapReadByte(SUM2_BIAO_4);
 344   2                       
 345   2      //         temp1 = IapReadByte(SUM2_BIAO_1);
 346   2      //               temp2 = IapReadByte(SUM2_BIAO_2);
 347   2      //               temp3 = IapReadByte(SUM2_BIAO_3);
 348   2      //               temp4 = IapReadByte(SUM2_BIAO_4);
 349   2      //               g_fSum_biao = temp1+temp2*100.0+temp3*10000.0+temp4*1000000.0;
 350   2      
 351   2                       p = (char *)&g_fSum_biao_ch4;
 352   2                       *p = IapReadByte(SUM2_BIAO_CUN_1);
 353   2                       *(p+1) = IapReadByte(SUM2_BIAO_CUN_2);
 354   2                       *(p+2) = IapReadByte(SUM2_BIAO_CUN_3);
 355   2                       *(p+3) = IapReadByte(SUM2_BIAO_CUN_4);
 356   2      //               
 357   2      //         temp1 = IapReadByte(SUM2_BIAO_CUN_1);
 358   2      //               temp2 = IapReadByte(SUM2_BIAO_CUN_2);
 359   2      //               temp3 = IapReadByte(SUM2_BIAO_CUN_3);
 360   2      //               temp4 = IapReadByte(SUM2_BIAO_CUN_4);
 361   2      //               g_fSum_biao_ch4 = temp1+temp2*100.0+temp3*10000.0+temp4*1000000.0;     
 362   2      
 363   2                       IapEraseSector(ZERO_ADD_1);
 364   2                   IapEraseSector(START);
C51 COMPILER V9.01   STORAGE                                                               05/20/2015 23:55:47 PAGE 7   

 365   2                       IapProgramByte(0,SECRIT);
 366   2                   IapProgramByte(0,START);
 367   2              
 368   2                       IapProgramByte(0,ZERO_ADD_1);
 369   2                       IapProgramByte(0,ZERO_ADD_2);
 370   2              
 371   2                       IapProgramByte(9,ZERO_ADD_REV_1);
 372   2                       IapProgramByte(0,ZERO_ADD_REV_2);
 373   2              //
 374   2                       IapProgramByte(10,K1_ADD_1);
 375   2                       IapProgramByte(0,K1_ADD_2);
 376   2              
 377   2                       IapProgramByte(1,K2_ADD_1);
 378   2                       IapProgramByte(0,K2_ADD_2);
 379   2              
 380   2              //       IapEraseSector(INTEGRAL);
 381   2                       IapProgramByte(g_cIntegral,INTEGRAL);   //IapProgramByte(0,INTEGRAL);
 382   2              
 383   2              //       IapEraseSector(AREA_1);
 384   2                       IapProgramByte(100,AREA_1); //1.0平方米
 385   2                       IapProgramByte(0,AREA_2);
 386   2              
 387   2              //       IapEraseSector(RANGE);
 388   2                       IapProgramByte(g_iRange,RANGE);
 389   2              
 390   2                        IapProgramByte(1,RANGEMIN1);
 391   2                        IapProgramByte(0,RANGEMIN2);
 392   2              
 393   2                       IapProgramByte(0,UNIT);
 394   2               
 395   2                   IapProgramByte(0,ISCH4);
 396   2              
 397   2                       IapProgramByte(0,MAXOUT);
 398   2              
 399   2                    p = (char *)&g_fSum; 
 400   2                   IapProgramByte(*p,SUM1);
 401   2                       IapProgramByte(*(p+1),SUM2);
 402   2                       IapProgramByte(*(p+2),SUM3);
 403   2                       IapProgramByte(*(p+3),SUM4);
 404   2              
 405   2                    p = (char *)&g_fSum_biao;
 406   2                   IapProgramByte(*p,SUM1_BIAO_1);
 407   2                       IapProgramByte(*(p+1),SUM1_BIAO_2);
 408   2                       IapProgramByte(*(p+2),SUM1_BIAO_3);
 409   2                       IapProgramByte(*(p+3),SUM1_BIAO_4);
 410   2      
 411   2                        p = (char *)&g_fSum_biao_ch4;
 412   2                       IapProgramByte(*p,SUM1_BIAO_CUN_1);
 413   2                       IapProgramByte(*(p+1),SUM1_BIAO_CUN_2);
 414   2                       IapProgramByte(*(p+2),SUM1_BIAO_CUN_3);
 415   2                       IapProgramByte(*(p+3),SUM1_BIAO_CUN_4);
 416   2      
 417   2                       IapEraseSector(START1);
 418   2                       IapEraseSector(START2);
 419   2                       IapProgramByte(10,START1);
 420   2                       IapProgramByte(10,START2);
 421   2                } 
 422   1         EA = 1;
 423   1      }
 424          
 425          void StrotPrect()
 426          {
C51 COMPILER V9.01   STORAGE                                                               05/20/2015 23:55:47 PAGE 8   

 427   1        IapEraseSector(SECRIT);
 428   1        IapProgramByte(g_cSecrit,SECRIT);
 429   1        IapProgramByte(g_cStart,START);
 430   1      }
 431          
 432          void Dateeprom()
 433          {
 434   1         unsigned char temp1,temp2;//,temp3,temp4;
 435   1         char * p;
 436   1         IapEraseSector(ISCH4);
 437   1      
 438   1          temp1 = g_iArea/100;
 439   1              temp2 = g_iArea%100;
 440   1              
 441   1              IapProgramByte(temp1,AREA_1);
 442   1              IapProgramByte(temp2,AREA_2);
 443   1      
 444   1         g_fZero = g_fZero*100;
 445   1         temp1 = (int)g_fZero/100;
 446   1         temp2 = (int)g_fZero%100;
 447   1         IapProgramByte(temp1,ZERO_ADD_1);
 448   1         IapProgramByte(temp2,ZERO_ADD_2);
 449   1         g_fZero = g_fZero/100;
 450   1      
 451   1          g_fZero_rev = g_fZero_rev*100;
 452   1         temp1 = (int)g_fZero_rev/100;
 453   1         temp2 = (int)g_fZero_rev%100;
 454   1         IapProgramByte(temp1,ZERO_ADD_REV_1);
 455   1         IapProgramByte(temp2,ZERO_ADD_REV_2);
 456   1         g_fZero_rev = g_fZero_rev/100;
 457   1         
 458   1         g_fK1 = g_fK1*1000;
 459   1         temp1 = (int)g_fK1/100;
 460   1         temp2 = (int)g_fK1%100;
 461   1         IapProgramByte(temp1,K1_ADD_1);
 462   1         IapProgramByte(temp2,K1_ADD_2);
 463   1         g_fK1 = g_fK1/1000;
 464   1      
 465   1         g_fK2 = g_fK2*100;
 466   1         temp1 = (int)g_fK2/100;
 467   1         temp2 = (int)g_fK2%100;
 468   1         IapProgramByte(temp1,K2_ADD_1);
 469   1         IapProgramByte(temp2,K2_ADD_2);
 470   1         g_fK2 = g_fK2/100;
 471   1      
 472   1         IapProgramByte(g_cIntegral,INTEGRAL);
 473   1      
 474   1              IapProgramByte(g_iRange,RANGE);
 475   1      
 476   1              temp1 = g_iRangeMin/100;
 477   1              temp2 = g_iRangeMin%100;
 478   1              IapProgramByte(temp1,RANGEMIN1);
 479   1              IapProgramByte(temp2,RANGEMIN2);
 480   1      
 481   1              IapProgramByte(g_cUint,UNIT);
 482   1      
 483   1          IapProgramByte(g_cWorkChange,ISCH4);
 484   1      
 485   1          IapProgramByte(g_cMaxOut,MAXOUT);
 486   1      
 487   1      
 488   1          p = (char *)&g_fSum;
C51 COMPILER V9.01   STORAGE                                                               05/20/2015 23:55:47 PAGE 9   

 489   1              IapProgramByte(*p,SUM1);
 490   1              IapProgramByte(*(p+1),SUM2);
 491   1              IapProgramByte(*(p+2),SUM3);
 492   1              IapProgramByte(*(p+3),SUM4);
 493   1              /*
 494   1              temp1 = ((long)(g_fSum))%100L;
 495   1              temp2 = ((long)(g_fSum))%10000L/100L;
 496   1              temp3 = ((long)(g_fSum))%1000000L/10000L;
 497   1              temp4 = ((long)(g_fSum))%100000000L/1000000L;
 498   1              IapProgramByte(temp1,SUM1);
 499   1              IapProgramByte(temp2,SUM2);
 500   1              IapProgramByte(temp3,SUM3);
 501   1              IapProgramByte(temp4,SUM4);      */
 502   1          
 503   1              p = (char *)&g_fSum_biao;
 504   1              IapProgramByte(*p,SUM1_BIAO_1);
 505   1              IapProgramByte(*(p+1),SUM1_BIAO_2);
 506   1              IapProgramByte(*(p+2),SUM1_BIAO_3);
 507   1              IapProgramByte(*(p+3),SUM1_BIAO_4) ;
 508   1              /*
 509   1              temp1 = ((long)(g_fSum_biao))%100L;
 510   1              temp2 = ((long)(g_fSum_biao))%10000L/100L;
 511   1              temp3 = ((long)(g_fSum_biao))%1000000L/10000L;
 512   1              temp4 = ((long)(g_fSum_biao))%100000000L/1000000L;
 513   1              IapProgramByte(temp1,SUM1_BIAO_1);
 514   1              IapProgramByte(temp2,SUM1_BIAO_2);
 515   1              IapProgramByte(temp3,SUM1_BIAO_3);
 516   1              IapProgramByte(temp4,SUM1_BIAO_4) ;     */
 517   1      
 518   1              p = (char *)&g_fSum_biao_ch4;
 519   1              IapProgramByte(*p,SUM1_BIAO_CUN_1);
 520   1              IapProgramByte(*(p+1),SUM1_BIAO_CUN_2);
 521   1              IapProgramByte(*(p+2),SUM1_BIAO_CUN_3);
 522   1              IapProgramByte(*(p+3),SUM1_BIAO_CUN_4) ;
 523   1              /*
 524   1          temp1 = ((long)(g_fSum_biao_ch4))%100L;
 525   1              temp2 = ((long)(g_fSum_biao_ch4))%10000L/100L;
 526   1              temp3 = ((long)(g_fSum_biao_ch4))%1000000L/10000L;
 527   1              temp4 = ((long)(g_fSum_biao_ch4))%100000000L/1000000L;
 528   1              IapProgramByte(temp1,SUM1_BIAO_CUN_1);
 529   1              IapProgramByte(temp2,SUM1_BIAO_CUN_2);
 530   1              IapProgramByte(temp3,SUM1_BIAO_CUN_3);
 531   1              IapProgramByte(temp4,SUM1_BIAO_CUN_4) ;          */
 532   1      
 533   1          if(g_cSecrit == 0) 
 534   1                {
 535   2                  IapEraseSector(ISCH4_2);
 536   2                      temp1 = g_iArea/100;
 537   2                      temp2 = g_iArea%100;
 538   2                      
 539   2                      IapProgramByte(temp1,AREA_1_2);
 540   2                      IapProgramByte(temp2,AREA_2_2);
 541   2              
 542   2                 g_fZero = g_fZero*100;
 543   2                 temp1 = (int)g_fZero/100;
 544   2                 temp2 = (int)g_fZero%100;
 545   2                 IapProgramByte(temp1,ZERO_ADD_1_2);
 546   2                 IapProgramByte(temp2,ZERO_ADD_2_2);
 547   2                 g_fZero = g_fZero/100;
 548   2              
 549   2                  g_fZero_rev = g_fZero_rev*100;
 550   2                 temp1 = (int)g_fZero_rev/100;
C51 COMPILER V9.01   STORAGE                                                               05/20/2015 23:55:47 PAGE 10  

 551   2                 temp2 = (int)g_fZero_rev%100;
 552   2                 IapProgramByte(temp1,ZERO_ADD_REV_1_2);
 553   2                 IapProgramByte(temp2,ZERO_ADD_REV_2_2);
 554   2                 g_fZero_rev = g_fZero_rev/100;
 555   2                 
 556   2                 g_fK1 = g_fK1*1000;
 557   2                 temp1 = (int)g_fK1/100;
 558   2                 temp2 = (int)g_fK1%100;
 559   2                 IapProgramByte(temp1,K1_ADD_1_2);
 560   2                 IapProgramByte(temp2,K1_ADD_2_2);
 561   2                 g_fK1 = g_fK1/1000;
 562   2              
 563   2                 g_fK2 = g_fK2*100;
 564   2                 temp1 = (int)g_fK2/100;
 565   2                 temp2 = (int)g_fK2%100;
 566   2                 IapProgramByte(temp1,K2_ADD_1_2);
 567   2                 IapProgramByte(temp2,K2_ADD_2_2);
 568   2                 g_fK2 = g_fK2/100;
 569   2              
 570   2                 IapProgramByte(g_cIntegral,INTEGRAL_2);
 571   2              
 572   2                      IapProgramByte(g_iRange,RANGE_2);
 573   2              
 574   2                      temp1 = g_iRangeMin/100;
 575   2                      temp2 = g_iRangeMin%100;
 576   2                      IapProgramByte(temp1,RANGEMIN1_2);
 577   2                      IapProgramByte(temp2,RANGEMIN2_2);
 578   2              
 579   2                      IapProgramByte(g_cUint,UNIT_2);
 580   2              
 581   2                  IapProgramByte(g_cWorkChange,ISCH4_2);
 582   2              
 583   2                  IapProgramByte(g_cMaxOut,MAXOUT_2);
 584   2      
 585   2                      p = (char *)&g_fSum;
 586   2                      IapProgramByte(*p,SUM1_2);
 587   2                      IapProgramByte(*(p+1),SUM2_2);
 588   2                      IapProgramByte(*(p+2),SUM3_2);
 589   2                      IapProgramByte(*(p+3),SUM4_2);
 590   2                      /*
 591   2                      temp1 = ((long)(g_fSum))%100L;
 592   2                      temp2 = ((long)(g_fSum))%10000L/100L;
 593   2                      temp3 = ((long)(g_fSum))%1000000L/10000L;
 594   2                      temp4 = ((long)(g_fSum))%100000000L/1000000L;
 595   2                      IapProgramByte(temp1,SUM1_2);
 596   2                      IapProgramByte(temp2,SUM2_2);
 597   2                      IapProgramByte(temp3,SUM3_2);
 598   2                      IapProgramByte(temp4,SUM4_2);  */
 599   2      
 600   2                      p = (char *)&g_fSum_biao;
 601   2                      IapProgramByte(*p,SUM2_BIAO_1);
 602   2                      IapProgramByte(*(p+1),SUM2_BIAO_2);
 603   2                      IapProgramByte(*(p+2),SUM2_BIAO_3);
 604   2                      IapProgramByte(*(p+3),SUM2_BIAO_4);
 605   2                      /*
 606   2                      temp1 = ((long)(g_fSum_biao))%100L;
 607   2                      temp2 = ((long)(g_fSum_biao))%10000L/100L;
 608   2                      temp3 = ((long)(g_fSum_biao))%1000000L/10000L;
 609   2                      temp4 = ((long)(g_fSum_biao))%100000000L/1000000L;
 610   2                      IapProgramByte(temp1,SUM2_BIAO_1);
 611   2                      IapProgramByte(temp2,SUM2_BIAO_2);
 612   2                      IapProgramByte(temp3,SUM2_BIAO_3);
C51 COMPILER V9.01   STORAGE                                                               05/20/2015 23:55:47 PAGE 11  

 613   2                      IapProgramByte(temp4,SUM2_BIAO_4); */
 614   2      
 615   2                      p = (char *)&g_fSum_biao_ch4;
 616   2                      IapProgramByte(*p,SUM2_BIAO_CUN_1);
 617   2                      IapProgramByte(*(p+1),SUM2_BIAO_CUN_2);
 618   2                      IapProgramByte(*(p+2),SUM2_BIAO_CUN_3);
 619   2                      IapProgramByte(*(p+3),SUM2_BIAO_CUN_4);
 620   2                      /*
 621   2                      temp1 = ((long)(g_fSum_biao_ch4))%100L;
 622   2                      temp2 = ((long)(g_fSum_biao_ch4))%10000L/100L;
 623   2                      temp3 = ((long)(g_fSum_biao_ch4))%1000000L/10000L;
 624   2                      temp4 = ((long)(g_fSum_biao_ch4))%100000000L/1000000L;
 625   2                      IapProgramByte(temp1,SUM2_BIAO_CUN_1);
 626   2                      IapProgramByte(temp2,SUM2_BIAO_CUN_2);
 627   2                      IapProgramByte(temp3,SUM2_BIAO_CUN_3);
 628   2                      IapProgramByte(temp4,SUM2_BIAO_CUN_4);  */
 629   2                }   
 630   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3257    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
